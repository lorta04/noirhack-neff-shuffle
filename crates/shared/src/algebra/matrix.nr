pub fn mul_NxN_by_Nx2<let N: u32>(a: [[Field; N]; N], b: [[Field; 2]; N]) -> [[Field; 2]; N] {
    let mut c: [[Field; 2]; N] = [[0; 2]; N];
    for i in 0..N {
        for j in 0..2 {
            let mut sum = 0;
            for k in 0..N {
                sum += a[i][k] * b[k][j];
            }
            c[i][j] = sum;
        }
    }
    c
}

#[test]
fn test_mul_4x4_by_4x2() {
    let a: [[Field; 4]; 4] = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];
    let b: [[Field; 2]; 4] = [[1, 2], [3, 4], [5, 6], [7, 8]];

    let result = mul_NxN_by_Nx2(a, b);
    let expected: [[Field; 2]; 4] = [[50, 60], [114, 140], [178, 220], [242, 300]];

    for i in 0..4 {
        for j in 0..2 {
            assert(result[i][j] == expected[i][j]);
        }
    }
}

#[test]
fn test_mul_10x10_by_10x2() {
    let a: [[Field; 10]; 10] = [
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        [21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
        [31, 32, 33, 34, 35, 36, 37, 38, 39, 40],
        [41, 42, 43, 44, 45, 46, 47, 48, 49, 50],
        [51, 52, 53, 54, 55, 56, 57, 58, 59, 60],
        [61, 62, 63, 64, 65, 66, 67, 68, 69, 70],
        [71, 72, 73, 74, 75, 76, 77, 78, 79, 80],
        [81, 82, 83, 84, 85, 86, 87, 88, 89, 90],
        [91, 92, 93, 94, 95, 96, 97, 98, 99, 100],
    ];
    let b: [[Field; 2]; 10] =
        [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20]];

    let result = mul_NxN_by_Nx2(a, b);
    let expected: [[Field; 2]; 10] = [
        [715, 770],
        [1715, 1870],
        [2715, 2970],
        [3715, 4070],
        [4715, 5170],
        [5715, 6270],
        [6715, 7370],
        [7715, 8470],
        [8715, 9570],
        [9715, 10670],
    ];

    for i in 0..10 {
        for j in 0..2 {
            assert(result[i][j] == expected[i][j]);
        }
    }
}
